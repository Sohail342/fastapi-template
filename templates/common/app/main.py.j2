"""Main FastAPI application."""

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

from app.api.v1.api import api_router
from app.core.config import settings


{% if orm == "sqlalchemy" -%}
from app.db.session import engine
from app.models import user  # noqa
{% elif orm == "beanie" -%}
from app.db.mongo import init_db
{% endif -%}


{% if project_type == "fullstack" -%}
from app.workers.celery_app import celery_app
{% endif -%}


def create_application() -> FastAPI:
    application = FastAPI(
        title=settings.PROJECT_NAME,
        description=settings.PROJECT_DESCRIPTION,
        version="0.1.0",
        openapi_url=f"{settings.API_V1_STR}/openapi.json",
    )
    
    # Set up CORS
    if settings.BACKEND_CORS_ORIGINS:
        application.add_middleware(
            CORSMiddleware,
            allow_origins=[str(origin) for origin in settings.BACKEND_CORS_ORIGINS],
            allow_credentials=True,
            allow_methods=["*"],
            allow_headers=["*"],
        )
    
    # Include API routes
    application.include_router(api_router, prefix=settings.API_V1_STR)
    
    return application


app = create_application()


@app.on_event("startup")
async def startup_event():
    """Application startup event handler."""
    {% if orm == "sqlalchemy" -%}
    # SQLAlchemy will handle table creation with Alembic migrations
    pass
    {% elif orm == "beanie" -%}
    await init_db()
    {% endif -%}
    
    {% if project_type == "fullstack" -%}
    # Test Celery connection
    try:
        celery_app.control.inspect()
    except Exception as e:
        print(f"Warning: Celery connection failed: {e}")
    {% endif -%}


@app.on_event("shutdown")
async def shutdown_event():
    """Application shutdown event handler."""
    {% if orm == "sqlalchemy" -%}
    # Cleanup database connections
    from app.db.session import engine
    await engine.dispose()
    {% elif orm == "beanie" -%}
    # Cleanup MongoDB connections
    from app.db.mongo import close_db
    await close_db()
    {% endif -%}


@app.get("/")
def root():
    """Root endpoint."""
    return {
        "message": "Welcome to {{ project_name }}",
        "version": "0.1.0",
        "docs": f"{settings.API_V1_STR}/docs",
    }


@app.get("/health")
def health_check():
    """Health check endpoint."""
    return {"status": "healthy"}


if __name__ == "__main__":
    import uvicorn
    uvicorn.run(
        "app.main:app",
        host="0.0.0.0",
        port=8000,
        reload=True,
    )